'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodashPartial = require('lodash/partial');

var _lodashPartial2 = _interopRequireDefault(_lodashPartial);

var _lodashCapitalize = require('lodash/capitalize');

var _lodashCapitalize2 = _interopRequireDefault(_lodashCapitalize);

var _utilsDateUtilsJs = require('../utils/DateUtils.js');

var _utilsDateUtilsJs2 = _interopRequireDefault(_utilsDateUtilsJs);

var _PickerTop = require('../PickerTop');

var _PickerTop2 = _interopRequireDefault(_PickerTop);

exports['default'] = _react2['default'].createClass({

  displayName: 'DayPickerTop',

  propTypes: {
    changeMonth: _react.PropTypes.func.isRequired,
    visibleDate: _react.PropTypes.any.isRequired,
    onChangeMode: _react.PropTypes.func.isRequired,
    textClassNames: _react.PropTypes.string,
    fixedMode: _react.PropTypes.bool
  },

  changeMode: function changeMode() {
    if (!this.props.fixedMode) {
      this.props.onChangeMode('month');
    }
  },

  render: function render() {
    var month = this.props.visibleDate.month();
    var weekDays = _react2['default'].createElement(
      'div',
      { className: 'week-days' },
      _utilsDateUtilsJs2['default'].getWeekdaysMin(this.props.locale).map(function (dayMin, index) {
        return _react2['default'].createElement(
          'div',
          { className: 'week-day', key: index },
          dayMin
        );
      })
    );
    var monthValue = _lodashCapitalize2['default'](this.props.visibleDate.format('MMMM YYYY'));

    return _react2['default'].createElement(_PickerTop2['default'], {
      fixed: this.props.fixedMode,
      value: monthValue,
      handleClick: this.changeMode,
      previousDate: _lodashPartial2['default'](this.props.changeMonth, month - 1),
      nextDate: _lodashPartial2['default'](this.props.changeMonth, month + 1),
      valueClassName: this.props.textClassNames,
      weekDays: weekDays
    });
  }
});
module.exports = exports['default'];