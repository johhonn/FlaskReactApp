'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utilsDateUtilsJs = require('../utils/DateUtils.js');

var _utilsDateUtilsJs2 = _interopRequireDefault(_utilsDateUtilsJs);

var _MonthPickerTop = require('./MonthPickerTop');

var _MonthPickerTop2 = _interopRequireDefault(_MonthPickerTop);

var _MonthPickerBody = require('./MonthPickerBody');

var _MonthPickerBody2 = _interopRequireDefault(_MonthPickerBody);

var MonthPicker = _react2['default'].createClass({
  displayName: 'MonthPicker',

  propTypes: {
    changeYear: _react.PropTypes.func.isRequired,
    visibleDate: _react.PropTypes.any.isRequired,
    date: _utilsDateUtilsJs2['default'].evaluateDateProp,
    minDate: _utilsDateUtilsJs2['default'].evaluateDateProp,
    maxDate: _utilsDateUtilsJs2['default'].evaluateDateProp,
    onChangeVisibleDate: _react.PropTypes.func.isRequired,
    onSelectDate: _react.PropTypes.func.isRequired,
    onChangeMode: _react.PropTypes.func.isRequired,
    mode: _react.PropTypes.string.isRequired,
    fixedMode: _react.PropTypes.bool
  },

  _onSelectDate: function _onSelectDate(date) {
    if (this.props.fixedMode) {
      this.props.onSelectDate(date);
    } else {
      this.props.onChangeVisibleDate(date);
      this.props.onChangeMode('day');
    }
  },

  render: function render() {
    return _react2['default'].createElement(
      'div',
      { className: 'react-datepicker-container month' },
      _react2['default'].createElement(_MonthPickerTop2['default'], {
        changeYear: this.props.changeYear,
        visibleDate: this.props.visibleDate,
        onChangeMode: this.props.onChangeMode,
        fixedMode: this.props.fixedMode
      }),
      _react2['default'].createElement(_MonthPickerBody2['default'], {
        visibleDate: this.props.visibleDate,
        date: this.props.date,
        minDate: this.props.minDate,
        maxDate: this.props.maxDate,
        onSelectDate: this._onSelectDate,
        mode: this.props.mode
      })
    );
  }
});

exports['default'] = MonthPicker;
module.exports = exports['default'];